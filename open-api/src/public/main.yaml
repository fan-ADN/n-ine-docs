openapi: 3.0.0
info:
  title: N-INE Public API
  version: 1.0.2
  description: N-INE クライアント向け公開API
servers:
  - url: https://api.app.n-ine.com/v1
paths:
  /tags:
    get:
      summary: 全てのタグ情報を取得
      description: 全てのタグ情報を取得します。
      operationId: getAllTags
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 100
            minimum: 1
            description: 1ページあたりの取得件数。デフォルトは100件。
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
            description: 取得開始位置。デフォルトは0（最初のアイテムから取得）。
      responses:
        '200':
          description: 成功した操作
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: タグのID
                        crmAccountId:
                          type: string
                          description: タグが属するCRMアカウントのID
                        name:
                          type: string
                          description: タグの名前
                    description: 全てのタグのリスト
                  totalCount:
                    type: integer
                    description: 取得可能なタグの総数。
                  limit:
                    type: integer
                    description: リクエストで指定された1ページあたりの取得件数。
                    example: 10
                  offset:
                    type: integer
                    description: リクエストで指定された取得開始位置。
                    example: 0
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Unauthorized"
                  message:
                    type: string
                    example: "Invalid API Key"
                  statusCode:
                    type: integer
                    example: 401
      security:
        - ApiKeyAuth: []

  /line-user-tags/{lineUserId}:
    get:
      summary: LINEユーザーに紐づくタグ情報を取得
      description: 指定したLINEユーザーIDに紐づくタグ情報を取得します。
      operationId: getLineUserTags
      parameters:
        - name: lineUserId
          in: path
          required: true
          schema:
            type: string
          description: タグ情報を取得する対象のLINEユーザーID。
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 100
            minimum: 1
            description: 1ページあたりの取得件数。デフォルトは100件。
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
            description: 取得開始位置。デフォルトは0（最初のアイテムから取得）。
      responses:
        '200':
          description: 成功した操作
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  lineUserId:
                    type: string
                    description: タグ情報を取得したLINEユーザーのID
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: タグのID
                        crmAccountId:
                          type: string
                          description: タグが属するCRMアカウントのID
                        name:
                          type: string
                          description: タグの名前
                    description: 指定されたLINEユーザーに紐づくタグのリスト
                  totalCount:
                    type: integer
                    description: 取得可能なタグの総数。
                  limit:
                    type: integer
                    description: リクエストで指定された1ページあたりの取得件数。
                    example: 10
                  offset:
                    type: integer
                    description: リクエストで指定された取得開始位置。
                    example: 0
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Unauthorized"
                  message:
                    type: string
                    example: "Invalid API Key"
                  statusCode:
                    type: integer
                    example: 401
      security:
        - ApiKeyAuth: []

  /line-user-tags:
    post:
      summary: LINEユーザーにタグを付与
      description: LINEユーザーにタグを付与します。
      operationId: tagLineUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lineUserId:
                  type: string
                  description: タグを付与するLINEユーザーのID。
                tagIds:
                  type: array
                  items:
                    type: string
                  description: LINEユーザーに付与するタグIDのリスト。最大100件まで指定可能。
                  maxItems: 100
              required:
                - lineUserId
                - tagIds
      responses:
        '200':
          description: 成功した操作
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: 不正なリクエスト
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
                    example: "Invalid request body"
                  statusCode:
                    type: integer
                    example: 400
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Unauthorized"
                  message:
                    type: string
                    example: "Invalid API Key"
                  statusCode:
                    type: integer
                    example: 401
      security:
        - ApiKeyAuth: []

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-NINE-API-Key
